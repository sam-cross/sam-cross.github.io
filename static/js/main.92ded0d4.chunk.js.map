{"version":3,"sources":["logo.svg","components/Header.js","pages/Home.js","pages/Uses.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","to","React","Component","Home","className","href","Uses","App","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"6KAAAA,EAAOC,QAAU,IAA0B,kC,2KCoB5BC,E,iLAfP,OACI,gCACI,yCACA,4BACI,4BAAI,kBAAC,IAAD,CAAMC,GAAG,KAAT,SACJ,4BAAI,kBAAC,IAAD,CAAMA,GAAG,UAAT,UACJ,4BAAI,kBAAC,IAAD,CAAMA,GAAG,SAAT,UACJ,4BAAI,kBAAC,IAAD,CAAMA,GAAG,aAAT,aACJ,4BAAI,kBAAC,IAAD,CAAMA,GAAG,YAAT,kB,GAVHC,IAAMC,WCUZC,E,iLATP,OACI,yBAAKC,UAAU,kBAAf,8DAEI,uBAAGC,KAAK,gCAAR,uD,GALGJ,IAAMC,WCkCVI,E,iLAhCP,OACI,yBAAKF,UAAU,kBACX,2CACA,uKAEA,wCACA,4BACI,4BAAI,sCAAJ,qBACA,4BAAI,qCAAJ,sBACA,4BAAI,uCAAJ,cACA,4BAAI,yCAAJ,qCACA,4BAAI,uCAAJ,kBAGJ,kDACA,4BACI,4BAAI,uCAAJ,oBACA,4BAAI,sCAAJ,mCACA,4BAAI,oCAAJ,cACA,4BAAI,wCAAJ,oBACA,4BAAI,6CAAJ,uBACA,4BAAI,+CAAJ,qCACA,4BAAI,yCAAJ,UACA,4BAAI,4CAAJ,aACA,4BAAI,qCAAJ,sBACA,4BAAI,qCAAJ,kB,GA3BDH,IAAMC,WCyBVK,MAhBf,WACC,OACC,yBAAKH,UAAU,OACd,kBAAC,IAAD,KACC,kBAAC,EAAD,MAEA,kBAAC,IAAD,KACC,kBAAC,IAAD,CAAOI,OAAK,EAACC,KAAK,KAAI,kBAAC,EAAD,OACtB,kBAAC,IAAD,CAAOA,KAAK,SAAQ,kBAAC,EAAD,OACpB,kBAAC,IAAD,CAAOA,KAAK,KAAI,kBAAC,EAAD,WCRDC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.92ded0d4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass Header extends React.Component {\r\n    render() {\r\n        return (\r\n            <header>\r\n                <h1>Sam Cross</h1>\r\n                <ul>\r\n                    <li><Link to=\"/\">Home</Link></li>\r\n                    <li><Link to=\"/about\">About</Link></li>\r\n                    <li><Link to=\"/uses\">/Uses</Link></li>\r\n                    <li><Link to=\"/projects\">Projects</Link></li>\r\n                    <li><Link to=\"/contact\">Contact</Link></li>\r\n                </ul>\r\n            </header>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header","import React from 'react';\r\n\r\nclass Home extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"page page-Home\">\r\n                This almost didn't exist, but I just had to add a homepage.\r\n                <a href=\"https://github.com/sam-cross\">Check out my GitHub while I work on this site.</a>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\n\r\nclass Uses extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"page page-Uses\">\r\n                <h1>Stuff I Use</h1>\r\n                <p>As you can see by the fact I haven't even styled this site, I'm by absolutely no means a professional, but nonetheless here's what I use</p>\r\n\r\n                <h2>Hardware</h2>\r\n                <ul>\r\n                    <li><b>Laptop:</b> Acer Aspire 5733</li>\r\n                    <li><b>Mouse:</b> Corsair Sabre RGB</li>\r\n                    <li><b>Monitor:</b> HP w2007v</li>\r\n                    <li><b>Over-ears:</b> Beyerdynamic DT 770 Pro (80 ohm)</li>\r\n                    <li><b>In-ears:</b> Sony XB510AS</li>\r\n                </ul>\r\n\r\n                <h2>Software and Stuff</h2>\r\n                <ul>\r\n                    <li><b>Browser:</b> Mozilla Firefox</li>\r\n                    <li><b>Editor:</b> VS Code (ST3 for small things)</li>\r\n                    <li><b>Font:</b> Fira Code</li>\r\n                    <li><b>Calendar:</b> Google Calendar</li>\r\n                    <li><b>Video Editing:</b> Magix Vegas Pro 17</li>\r\n                    <li><b>Package manager:</b> npm (planning to switch to yarn)</li>\r\n                    <li><b>Framework:</b> React</li>\r\n                    <li><b>Stock Images:</b> Unsplash</li>\r\n                    <li><b>Music:</b> Google Play Music</li>\r\n                    <li><b>Music:</b> Spotify</li>\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Uses;","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\nimport logo from './logo.svg';\nimport './App.css';\n\nimport Header from './components/Header.js';\n\nimport Home from './pages/Home.js';\nimport Uses from './pages/Uses.js';\n\nfunction App() {\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<Router>\n\t\t\t\t<Header />\n\t\t\t\t\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route exact path=\"/\"><Home /></Route> \n\t\t\t\t\t<Route path=\"/uses\"><Uses /></Route>\n\t\t\t\t\t<Route path=\"*\"><Home /></Route>\n\t\t\t\t</Switch>\n\t\t\t</Router>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}