{"version":3,"sources":["components/Header.js","components/Footer.js","helpers/setPageTitle.js","pages/Home.js","pages/About.js","pages/Uses.js","pages/Error.js","App.js","serviceWorker.js","index.js","data/markdown/aboutData.md","logo.svg"],"names":["Header","to","React","Component","Footer","class","id","setPageTitle","_document","title","Home","document","className","About","props","state","aboutData","fetch","then","res","text","setState","source","Uses","Error","href","App","hashtype","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"uPAoBeA,E,iLAfP,OACI,gCACI,yCACA,4BACI,4BAAI,kBAAC,IAAD,CAAMC,GAAG,KAAT,SACJ,4BAAI,kBAAC,IAAD,CAAMA,GAAG,UAAT,UACJ,4BAAI,kBAAC,IAAD,CAAMA,GAAG,SAAT,SACJ,4BAAI,kBAAC,IAAD,CAAMA,GAAG,aAAT,aACJ,4BAAI,kBAAC,IAAD,CAAMA,GAAG,YAAT,kB,GAVHC,IAAMC,WCUZC,E,iLARP,OACI,gCACI,0BAAMC,MAAM,cAAcC,GAAG,aAA7B,uB,GAJKJ,IAAMC,WCCZI,MAJf,SAAsBC,EAAWC,GAC7BD,EAAUC,MAAQA,EAAQ,gBCefC,E,4LAXPH,EAAaI,SAAU,U,+BAGvB,OACI,yBAAKC,UAAU,kBAAf,4D,GANOV,IAAMC,W,kCCqCVU,E,YAjCX,WAAYC,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAQ,CACTC,UAAW,IAHA,E,iFAME,IAAD,OAChBT,EAAaI,SAAU,SAEvBM,MAAMD,KACLE,MAAK,SAAAC,GACF,OAAOA,EAAIC,UAEdF,MAAK,SAAAE,GACF,EAAKC,SAAS,CAAEL,UAAWI,S,+BAI/B,OACI,yBAAKR,UAAU,mBACX,kBAAC,IAAD,CAAeU,OAAM,qW,GArBjBpB,IAAMC,WC0CXoB,E,4LA1CPhB,EAAaI,SAAU,U,+BAGvB,OACI,yBAAKC,UAAU,kBACX,kBAAC,IAAD,CAAeU,OAAM,25B,GAPlBpB,IAAMC,WCaVqB,E,4LAZPjB,EAAaI,SAAU,W,+BAGvB,OACI,yBAAKC,UAAU,mBAAf,uFAEI,uBAAGa,KAAK,gCAAR,8B,GARIvB,IAAMC,WCmCXuB,MAtBf,WACC,OACC,yBAAKd,UAAU,OACd,kBAAC,IAAD,CAAQe,SAAS,WAChB,kBAAC,EAAD,MAEA,kBAAC,IAAD,KACC,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAY,SAAChB,GAAD,OAAY,kBAAC,EAASA,MACxD,kBAAC,IAAD,CAAOe,KAAK,SAASC,UAAY,SAAChB,GAAD,OAAY,kBAAC,EAAUA,MACxD,kBAAC,IAAD,CAAOe,KAAK,QAAQC,UAAY,SAAChB,GAAD,OAAY,kBAAC,EAASA,MAItD,kBAAC,IAAD,CAAOe,KAAK,IAAIC,UAAY,SAAChB,GAAD,OAAY,kBAAC,EAAUA,OAGpD,kBAAC,EAAD,SCpBgBiB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAAS1B,SAAS2B,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMvB,MAAK,SAAAwB,GACjCA,EAAaC,iB,mBErInBC,EAAOC,QAAU,IAA0B,sC,6ECA3CD,EAAOC,QAAU,IAA0B,kC","file":"static/js/main.19e38a9b.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass Header extends React.Component {\r\n    render() {\r\n        return (\r\n            <header>\r\n                <h1>Sam Cross</h1>\r\n                <ul>\r\n                    <li><Link to=\"/\">Home</Link></li>\r\n                    <li><Link to=\"/about\">About</Link></li>\r\n                    <li><Link to=\"/uses\">Uses</Link></li>\r\n                    <li><Link to=\"/projects\">Projects</Link></li>\r\n                    <li><Link to=\"/contact\">Contact</Link></li>\r\n                </ul>\r\n            </header>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass Footer extends React.Component {\r\n    render() {\r\n        return (\r\n            <footer>\r\n                <span class=\"label-small\" id=\"copyright\">&copy; Sam Cross</span>\r\n            </footer>\r\n        );\r\n    }\r\n};\r\n\r\nexport default Footer;","function setPageTitle(_document, title) {\r\n    _document.title = title + \" | Sam Cross\";\r\n}\r\n\r\nexport default setPageTitle;","import React from 'react';\r\nimport setPageTitle from '../helpers/setPageTitle.js';\r\n\r\nclass Home extends React.Component {\r\n    componentDidMount() {\r\n        setPageTitle(document, 'Home');\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"page page-Home\">\r\n                Welcome! There's not much here yet. Look back later!\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport ReactMarkdown from 'react-markdown';\r\nimport setPageTitle from '../helpers/setPageTitle.js';\r\n\r\nimport aboutData from '../data/markdown/aboutData.md';\r\n\r\nclass About extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            aboutData: ''\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        setPageTitle(document, 'About');\r\n\r\n        fetch(aboutData)\r\n        .then(res => {\r\n            return res.text();\r\n        })\r\n        .then(text => {\r\n            this.setState({ aboutData: text });\r\n        });\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"page page-About\">\r\n                <ReactMarkdown source={\r\n`Hi, I'm Sam!\r\n\r\nSometimes I call myself a web developer but that's a little glorified. I dabble in web technologies such as HTML5, CSS3 and JavaScript. I've been on-and-off \"learning\" React since whenever react-router v4 was in its early stages. I used to know Python and C++, so that's cool.\r\n\r\n# Links\r\n* [GitHub](https://github.com/sam-cross)`\r\n                } />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default About;","import React from 'react';\r\nimport ReactMarkdown from 'react-markdown';\r\nimport setPageTitle from '../helpers/setPageTitle.js';\r\n\r\nclass Uses extends React.Component {\r\n    componentDidMount() {\r\n        setPageTitle(document, 'Uses');\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"page page-Uses\">\r\n                <ReactMarkdown source={\r\n`# Stuff I Use\r\nAs you can see by the fact I've barely styled this site, I'm by no means a professional. But here's the stuff I use anyway - you might _(MIGHT)_ find it interesting!\r\n\r\n## Hardware\r\n* **Laptop:** Acer Aspire 5733\r\n* **Mouse:** Corsair Sabre RGB\r\n* **Monitor:** HP w2007v\r\n* **Over-ears:** Beyerdynamic DT 770 Pro (80 ohm)\r\n* **In-ears:** Sony XB510AS\r\n\r\n## Software\r\n* **Operating System:** Microsoft Windows 10\r\n* **Phone:** Nokia 7 plus\r\n* **Browser:** Mozilla Firefox\r\n* **Editor:** VS Code (or Sublime Text 3, for small bits)\r\n    * **Font:** Fira Code (ligatures enabled)\r\n* **Image Manipulation:** Adobe Photoshop CC\r\n* **Video Editing:** Sony Vegas Pro\r\n\r\n## Tech Stack\r\n* **Languages:** HTML, CSS, Javascript\r\n* **Framework:** React\r\n\r\n## Services\r\n* **Calendar:** Google Calendar\r\n* **Stock Images:** [Unsplash](https://unsplash.com/)\r\n* **Music**\r\n    * Google Play Music\r\n    * Spotify\r\n`\r\n                } />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Uses;","import React from 'react';\r\nimport setPageTitle from '../helpers/setPageTitle.js';\r\n\r\nclass Error extends React.Component {\r\n    componentDidMount() {\r\n        setPageTitle(document, 'Error');\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"page page-Error\">\r\n                This page doesn't exist. Here, have a random link which you totally shouldn't click!\r\n                <a href=\"https://github.com/sam-cross\">clickmeclickmeclickme</a>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Error;","import React from 'react';\r\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\r\n\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\n\r\nimport Header from './components/Header.js';\r\nimport Footer from './components/Footer.js';\r\n\r\nimport Home from './pages/Home.js';\r\nimport About from './pages/About.js';\r\nimport Uses from './pages/Uses.js';\r\n// import Portfolio from './pages/Portfolio.js';\r\n// import Contact from './pages/Contact.js';\r\nimport Error from './pages/Error.js';\r\n\r\nfunction App() {\r\n\treturn (\r\n\t\t<div className=\"App\">\r\n\t\t\t<Router hashtype=\"noslash\">\r\n\t\t\t\t<Header />\r\n\t\t\t\t\r\n\t\t\t\t<Switch>\r\n\t\t\t\t\t<Route exact path=\"/\" component={ (props) => (<Home {...props} />) } />\r\n\t\t\t\t\t<Route path=\"/about\" component={ (props) => (<About {...props} />) } />\r\n\t\t\t\t\t<Route path=\"/uses\" component={ (props) => (<Uses {...props} />) } />\r\n\t\t\t\t\t{/*<Route path=\"/portfolio\" component={ (props) => (<Portfolio {...props} />) } />*/}\r\n\t\t\t\t\t{/*<Route path=\"/contact\" component={ (props) => (<Contact {...props} />) } />*/}\r\n\r\n\t\t\t\t\t<Route path=\"*\" component={ (props) => (<Error {...props} />) } />\r\n\t\t\t\t</Switch>\r\n\r\n\t\t\t\t<Footer />\r\n\t\t\t</Router>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/aboutData.41f4d654.md\";","module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";"],"sourceRoot":""}